extends layout

block content
  img(src="https://res.cloudinary.com/cloudinary/image/upload/fl_attachment/v1/logo/for_white_bg/cloudinary_logo_for_white_bg.svg" height="36" width="169" alt="cloudinary")    
  hr
  div(class="container")
    div(class="row")
        div(class="twelve columns")          
            h4 Font Overlay for Image          
            hr
    div(class="row")
        div(class="twelve columns")
            label Pick an Image
            br
            input(type="button" id="my_btn" class="my_btn" name="Open ML")
    div(class="row")
        div(class="twelve columns")
            span      
            span(id="link" style="word-wrap: break-word;") Cloudinary URL will be shown here 
            br    
            img(src="https://res.cloudinary.com/mermaid/image/upload/f_auto,q_auto/aydqtzl0scrq0ulz5038" id='img' style="display:none")
            canvas(width="200", height="200" style="border:1px solid #000000;" id='canvas')
    //- header row
    div(class="row")
        div(class="three columns")
            h4 Line 1 Settings
        div(class="one column")
        div(class="three columns")
            h4 Line 2 Settings
        div(class="one column")
        div(class="three columns")
            h4 Line 3 Settings
        div(class="one column")
    //- text area for the message
    div(class="row")
        div(class="three columns")
            label Text
                textarea(rows="4" cols="40" class="message")
        div(class="one column")
        div(class="three columns")
            label Text
                textarea(rows="4" cols="40" class="message")
        div(class="one column")
        div(class="three columns")
            label Text
                textarea(rows="4" cols="40" class="message")
        div(class="one column")
    //- Font picker - TBD: Switch to using a List API call
    div(class="row")
        div(class="three columns")
            label Font Face &nbsp;
                select(name="font" class="fontFace")
                    option(value="f3") Choose one..
                    option(value="f1") Font1
                    option(value="f2") Font2
                    option(value="f3") Font3
                    option(value="f4") Font4
        div(class="one column")
        div(class="three columns")
            label Font Face &nbsp;
                select(name="font" class="fontFace")
                    option(value="f3") Choose one..
                    option(value="f1") Font1
                    option(value="f2") Font2
                    option(value="f3") Font3
                    option(value="f4") Font4
        div(class="one column")
        div(class="three columns")
            label Font Face &nbsp;
                select(name="font" class="fontFace")
                    option(value="f3") Choose one..
                    option(value="f1") Font1
                    option(value="f2") Font2
                    option(value="f3") Font3
                    option(value="f4") Font4
        div(class="one column")
    //- Font size selector
    div(class="row")
        div(class="three columns")
            label Font Size
                input(type="range" min="10" max="200" value="60" class="slider fontSize")
                span(class="showFontSize") 60
        div(class="one column")
        div(class="three columns")
            label Font Size
                input(type="range" min="10" max="200" value="60" class="slider fontSize")
                span(class="showFontSize") 60
        div(class="one column")
        div(class="three columns")
            label Font Size
                input(type="range" min="10" max="200" value="60" class="slider fontSize")
                span(class="showFontSize") 60
        div(class="one column")
    //- Font Color
    div(class="row")
        div(class="three columns")
            label Font Color &nbsp;
                input(type="text" value="000000" size="6" class="fontColor")
        div(class="one column")
        div(class="three columns")
            label Font Color &nbsp;
                input(type="text" value="000000" size="6" class="fontColor")
        div(class="one column")
        div(class="three columns")
            label Font Color &nbsp;
                input(type="text" value="000000" size="6" class="fontColor")
        div(class="one column")
    //- X position
    div(class="row")
        div(class="three columns")            
            div(style="float:right")
                input(type="button" value="Pick" class="mousePosition")            
            div(style="float:left")
                label X &nbsp;
                    input(type="text" value="400" size="5" class="positionX")    
            div(style="float:center")
                label &nbsp; Y &nbsp;
                    input(type="text" value="400" size="5" class="positionY")  
            
        div(class="one column")
        div(class="three columns")            
            div(style="float:right")
                input(type="button" value="Pick" class="mousePosition")            
            div(style="float:left")
                label X &nbsp;
                    input(type="text" value="400" size="5" class="positionX")    
            div(style="float:center")
                label &nbsp; Y &nbsp;
                    input(type="text" value="400" size="5" class="positionY")  
            
        div(class="one column")
        div(class="three columns")            
            div(style="float:right")
                input(type="button" value="Pick" class="mousePosition")            
            div(style="float:left")
                label X &nbsp;
                    input(type="text" value="400" size="5" class="positionX")    
            div(style="float:center")
                label &nbsp; Y &nbsp;
                    input(type="text" value="400" size="5" class="positionY")  
        div(class="one column")    
        
    //- Buttons
    div(class="row")
        div(class="one column")
            input(type="button" name="preview" value="Preview")
        div(class="one column")
        div(class="one column")
            input(type="button" name="clear" value="Clear") 
        div(class="one column")    
        div(class="one column")
            input(type="button" name="generate" value="Generate")
    
    script(type="text/javascript").
    
        var config = {}
        
        //Selecting font size
        const sliders = document.getElementsByClassName('fontSize')
        for(let i=0; i<sliders.length; i++){
            sliders[i].addEventListener(
                'change',
                function() {setSliderValue(i) },
                false
            )
        }

        // add an event listenr for click on canvas. This will be used to detect mouse pointer position to position text overlay
        document.getElementById('canvas').addEventListener('click', function(e) {
            setMousePosition(e)
        })

        // enable ability to pick overlay position for each line
        const mouseTrackers = document.getElementsByClassName('mousePosition')
        for(let i=0; i<mouseTrackers.length; i++){
            mouseTrackers[i].addEventListener(
                'click',
                function() { 
                    config.mouseTrackerEnabled = i                    
                },
                false
            )
        }

        // add an event handler to load the image in canvas when the <img> tag is ready with the image
         document.getElementById('img').addEventListener('load', function(e) {
            setCanvasImage(e)
        })

        // function for each main button

        document.getElementsByName('preview')[0].addEventListener(
            'click',
            previewTransformation,
            false
        )

        document.getElementsByName('clear')[0].addEventListener(
            'click',
            clearTransformation,
            false
        )

        document.getElementsByName('generate')[0].addEventListener(
            'click',
            generateTransformation,
            false
        )

        var publicId = 'aydqtzl0scrq0ulz5038'        
        let ml = null

        const mloptions = {
            cloud_name: 'mermaid',
            api_key: '515719411948469',
            username: 'akshay.ranganath@cloudinary.com',                    
            button_class: 'myBtn',
            button_caption: 'Insert Image'          
            }
        
        window.ml = cloudinary.createMediaLibrary(mloptions, {insertHandler: insertHandler}, "#my_btn")
        